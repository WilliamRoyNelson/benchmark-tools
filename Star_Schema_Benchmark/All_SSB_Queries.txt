Appendix A
Below are the queries that were used in testing. The SQL queries as published in the Star Schema Benchmark are first, followed by the plain-English versions, then followed by denormalized versions, and then followed by queries optimized for Apache Druid and Google BiqQuery.

Star Schema Benchmark Queries (Original)

Query 1.1
select sum(lo_extendedprice*lo_discount) as revenue
from ssb.lineorder, ssb.dwdate
where lo_orderdate = d_datekey
and d_year = 1993
and lo_discount between 1 and 3
and lo_quantity < 25;

Query 1.2
select sum(lo_extendedprice*lo_discount) as revenue
from ssb.lineorder, ssb.dwdate
where lo_orderdate = d_datekey
and d_yearmonthnum = 199401
and lo_discount between 4 and 6
and lo_quantity between 26 and 35;

Query 1.3
select sum(lo_extendedprice*lo_discount) as revenue
from ssb.lineorder, ssb.dwdate
where lo_orderdate = d_datekey
and d_weeknuminyear = 6
and d_year = 1994
and lo_discount between 5 and 7
and lo_quantity between 26 and 35;

Query 2.1
select sum(lo_revenue), d_year, p_brand1
from ssb.lineorder, ssb.dwdate, ssb.part, ssb.supplier
where lo_orderdate = d_datekey
and lo_partkey = p_partkey
and lo_suppkey = s_suppkey
and p_category = 'MFGR#12'
and s_region = 'AMERICA'
group by d_year, p_brand1
order by d_year, p_brand1;

Query 2.2
select sum(lo_revenue), d_year, p_brand1
from ssb.lineorder, ssb.dwdate, ssb.part, ssb.supplier
where lo_orderdate = d_datekey
and lo_partkey = p_partkey
and lo_suppkey = s_suppkey
and p_brand1 between 'MFGR#2221' and 'MFGR#2228'
and s_region = 'ASIA'
group by d_year, p_brand1
order by d_year, p_brand1;

Query 2.3
select sum(lo_revenue), d_year, p_brand1
from ssb.lineorder, ssb.dwdate, ssb.part, ssb.supplier
where lo_orderdate = d_datekey
and lo_partkey = p_partkey
and lo_suppkey = s_suppkey
and p_brand1 = 'MFGR#2221'
and s_region = 'EUROPE'
group by d_year, p_brand1
order by d_year, p_brand1;

Query 3.1
select c_nation, s_nation, d_year, sum(lo_revenue) as revenue
from ssb.customer, ssb.lineorder, ssb.supplier, ssb.dwdate
where lo_custkey = c_custkey
and lo_suppkey = s_suppkey
and lo_orderdate = d_datekey
and c_region = 'ASIA' and s_region = 'ASIA'
and d_year >= 1992 and d_year <= 1997
group by c_nation, s_nation, d_year
order by d_year asc, revenue desc;

Query 3.2
select c_city, s_city, d_year, sum(lo_revenue) as revenue
from ssb.customer, ssb.lineorder, ssb.supplier, ssb.dwdate
where lo_custkey = c_custkey
and lo_suppkey = s_suppkey
and lo_orderdate = d_datekey
and c_nation = 'UNITED STATES'
and s_nation = 'UNITED STATES'
and d_year >= 1992 and d_year <= 1997
group by c_city, s_city, d_year
order by d_year asc, revenue desc;

Query 3.3
select c_city, s_city, d_year, sum(lo_revenue) as revenue
from ssb.customer, ssb.lineorder, ssb.supplier, ssb.dwdate
where lo_custkey = c_custkey
and lo_suppkey = s_suppkey
and lo_orderdate = d_datekey
and (c_city='UNITED KI1' or c_city='UNITED KI5')
and (s_city='UNITED KI1' or s_city='UNITED KI5')
and d_year >= 1992 and d_year <= 1997
group by c_city, s_city, d_year
order by d_year asc, revenue desc;

Query 3.4
select c_city, s_city, d_year, sum(lo_revenue) as revenue
from ssb.customer, ssb.lineorder, ssb.supplier, ssb.dwdate
where lo_custkey = c_custkey
and lo_suppkey = s_suppkey
and lo_orderdate = d_datekey
and (c_city='UNITED KI1' or c_city='UNITED KI5')
and (s_city='UNITED KI1' or s_city='UNITED KI5')
and d_yearmonth = 'Dec1997'
group by c_city, s_city, d_year
order by d_year asc, revenue desc;

Query 4.1
select d_year, c_nation, sum(lo_revenue - lo_supplycost) as profit
from ssb.dwdate, ssb.customer, ssb.supplier, ssb.part, ssb.lineorder
where lo_custkey = c_custkey
 and lo_suppkey = s_suppkey
 and lo_partkey = p_partkey
 and lo_orderdate = d_datekey
 and c_region = 'AMERICA'
 and s_region = 'AMERICA'
 and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2')
group by d_year, c_nation
order by d_year, c_nation;

Query 4.2
select d_year, s_nation, p_category, sum(lo_revenue - lo_supplycost) as profit
from ssb.dwdate, ssb.customer, ssb.supplier, ssb.part, ssb.lineorder
where lo_custkey = c_custkey
and lo_suppkey = s_suppkey
and lo_partkey = p_partkey
and lo_orderdate = d_datekey
and c_region = 'AMERICA'
and s_region = 'AMERICA'
and (d_year = 1997 or d_year = 1998)
and (p_mfgr = 'MFGR#1'
or p_mfgr = 'MFGR#2')
group by d_year, s_nation, p_category order by d_year, s_nation, p_category;

Query 4.3
select d_year, s_city, p_brand1, sum(lo_revenue - lo_supplycost) as profit
from ssb.dwdate, ssb.customer, ssb.supplier, ssb.part, ssb.lineorder
where lo_custkey = c_custkey
and lo_suppkey = s_suppkey
and lo_partkey = p_partkey
and lo_orderdate = d_datekey
and c_region = 'AMERICA'
and s_nation = 'UNITED STATES'
and (d_year = 1997 or d_year = 1998)
and p_category = 'MFGR#14'
group by d_year, s_city, p_brand1 order by d_year, s_city, p_brand1;

Star Schema Benchmark Queries (Plain-English)
Query Flight 1 has restrictions on 1 dimension and measures revenue increase from eliminating ranges of discounts in given product order quantity intervals shipped in a given year.
•	Q1.1 has restrictions d_year = 1993, lo_quantity < 25, and lo_discount between 1 and 3.
•	Q1.2 changes restrictions of Q1.1 to d_yearmonthnum = 199401, lo_quantity between 26 and 35, lo_discount between 4 and 6.
•	Q1.3 changes the restrictions to d_weeknuminyear = 6 and d_year= 1994, lo_quantity between 36 and 40, and lo_discount between 5 and 7
Query flight 2 has restictions on 2 dimensions. The query compares revenues for certain product classes and suppliers in a certain region, grouped by more restrictive product classes and all years of orders.
•	2.1 has restrictions on p_category and s_region.
•	2.2 changes restrictions of Q2.1 to p_brand1  between 'MFGR#2221' and 'MFGR#2228' and s_regrion to 'ASIA'
•	2.3 changes restriction to p_brand1='MFGR#2339' and s_region='EUROPE'

Query flight 3, has restrictions on 3 dimensions. The query is intended to retrieve total revenue for lineorder transactions within and given region in a certain time period, grouped by customer nation, supplier nation and year.
•	Q3.1 has restriction c_region = 'ASIA', s_region='ASIA', and restricts d_year to a 6-year period, grouped by c_nation, s_nation and d_year
•	3.2 changes region restrictions to c_nation = ""UNITED STATES' and s_nation = 'UNITED STATES', grouping revenue by customer city, supplier city and year.
•	3.3 changes restrictions to c_city and s_city to two cities in 'UNITED KINGDOM' and retrieves revenue grouped by c_city, s_city, d_year.
•	3.4 changes date restriction to a single month. After partitioning the 12 billion row dataset on d_yearmonth, we needed to rewrite the query for d_yearmonthnum

Query flight 4 provides a ""what-if"" sequence of queries that might be generated in an OLAP-style of exploration. Starting with a query with rather weak constraints on three dimensional columns, we retreive aggregate profit, sum(lo_revenue-lo_supplycost), grouped by d_year and c_nation. Successive queries modify predicate constraints by drilling down to find the source of an anomaly.
•	Q4.1 restricts c_region and s_region both to 'AMERICA', and p_mfgr to one of two possilities.
•	Q4.2 utilizes a typical workflow to dig deeper into the results. We pivot away from grouping by s_nation, restrict d_year to 1997 and 1998, and drill down to group by p_category to see where the profit change arises.
•	Q4.3 digs deeper, restricting s_nation to 'UNITED STATES' and p_category = 'MFGR#14', drilling down to group by s_city (in the USA) and p_brand1 (within p_category 'MFGR#14').

Star Schema Benchmark Queries (Denormalized)

Query 1.1
select sum(lo_extendedprice*lo_discount) as revenue from denormalized where d_year = 1993 and lo_discount between 1 and 3 and lo_quantity < 25

Query 1.2
select sum(lo_extendedprice*lo_discount) as lo_revenue from denormalized where d_yearmonthnum = 199401 and lo_discount between 4 and 6 and lo_quantity between 26 and 35

Query 1.3
select sum(lo_extendedprice*lo_discount) as lo_revenue from denormalized where d_weeknuminyear = 6 and d_year = 1994 and lo_discount between 5 and 7 and lo_quantity between 26 and 35

Query 2.1
select sum(lo_revenue), d_year, p_brand1 from denormalized where p_category = 'MFGR#12' and s_region = 'AMERICA' group by d_year, p_brand1 order by d_year, p_brand1

Query 2.2
select sum(lo_revenue), d_year, p_brand1 from denormalized where p_brand1 between 'MFGR#2221' and 'MFGR#2228' and s_region = 'ASIA' group by d_year, p_brand1 order by d_year, p_brand1

Query 2.3
select sum(lo_revenue), d_year, p_brand1 from denormalized where p_brand1= 'MFGR#2239' and s_region = 'EUROPE' group by d_year, p_brand1 order by d_year, p_brand1

Query 3.1
select c_nation, s_nation, d_year, sum(lo_revenue) as lo_revenue from denormalized where c_region = 'ASIA' and s_region = 'ASIA' and d_year >= 1992 and d_year <= 1997 group by c_nation, s_nation, d_year order by d_year asc, lo_revenue desc

Query 3.2
select c_city, s_city, d_year, sum(lo_revenue) as lo_revenue from denormalized where c_nation = 'UNITED STATES' and s_nation = 'UNITED STATES' and d_year >= 1992 and d_year <= 1997 group by c_city, s_city, d_year order by d_year asc, lo_revenue desc

Query 3.3
select c_city, s_city, d_year, sum(lo_revenue) as lo_revenue from denormalized where (c_city='UNITED KI1' or c_city='UNITED KI5') and (s_city='UNITED KI1' or s_city='UNITED KI5') and d_year >= 1992 and d_year <= 1997 group by c_city, s_city, d_year order by d_year asc, lo_revenue desc

Query 3.4
select c_city, s_city, d_year, sum(lo_revenue) as lo_revenue from denormalized where (c_city='UNITED KI1' or c_city='UNITED KI5') and (s_city='UNITED KI1' or s_city='UNITED KI5') and d_yearmonth = 'Dec1997' group by c_city, s_city, d_year order by d_year asc, lo_revenue desc

Query 4.1
select d_year, c_nation, sum(lo_revenue - lo_supplycost) as profit from denormalized where c_region = 'AMERICA' and s_region = 'AMERICA' and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2') group by d_year, c_nation order by d_year, c_nation

Query 4.2
select d_year, s_nation, p_category, sum(lo_revenue - lo_supplycost) as profit from denormalized where c_region = 'AMERICA' and s_region = 'AMERICA' and (d_year = 1997 or d_year = 1998) and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2') group by d_year, s_nation, p_category order by d_year, s_nation, p_category

Query 4.3
select d_year, s_city, p_brand1, sum(lo_revenue - lo_supplycost) as profit from denormalized where c_region = 'AMERICA' and s_nation = 'UNITED STATES' and (d_year = 1997 or d_year = 1998) and p_category = 'MFGR#14' group by d_year, s_city, p_brand1 order by d_year, s_city, p_brand1

Optimized Apache Druid Queries
Query 1.1
select sum(lo_extendedprice*lo_discount) as revenue from ssb_data where floor(__time to YEAR) = TIMESTAMP '1993-01-01' and lo_discount between 1 and 3 and lo_quantity < 25

Query 1.2
select sum(lo_extendedprice*lo_discount) as lo_revenue from  ssb_data where TIME_FLOOR(\"__time\",'P1M') = TIME_PARSE('1994-01-01T00:00:00.000Z') and lo_discount between 4 and 6 and lo_quantity between 26 and 35

Query 1.3
select sum(lo_extendedprice*lo_discount) as lo_revenue from ssb_data where
TIME_FLOOR(__time,'P1W')=TIME_PARSE('1994-02-07T00:00:00.000Z') and lo_discount between 5 and 7 and lo_quantity between 26 and 35

Query 2.1
select sum(lo_revenue), d_year, p_brand1 from ssb_data  where p_category = 'MFGR#12' and s_region = 'AMERICA' group by d_year, p_brand1 order by d_year, p_brand1

Query 2.2
select sum(lo_revenue), d_year, p_brand1 from ssb_data  where p_brand1 between 'MFGR#2221' and 'MFGR#2228' and s_region = 'ASIA' group by d_year, p_brand1 order by d_year, p_brand1

Query 2.3
select sum(lo_revenue), d_year, p_brand1 from ssb_data  where p_brand1= 'MFGR#2239' and s_region = 'EUROPE' group by d_year, p_brand1 order by d_year, p_brand1

Query 3.1
select c_nation, s_nation, d_year, sum(lo_revenue) as lo_revenue from ssb_data  where c_region = 'ASIA' and s_region = 'ASIA' and TIME_EXTRACT(\"__time\",'YEAR') >= 1992 and TIME_EXTRACT(\"__time\",'YEAR') <= 1997 group by c_nation, s_nation, d_year order by d_year asc, lo_revenue desc

Query 3.2
select c_city, s_city, d_year, sum(lo_revenue) as lo_revenue from ssb_data  where c_nation = 'UNITED STATES' and s_nation = 'UNITED STATES' and TIME_EXTRACT(\"__time\",'YEAR') >= 1992 and TIME_EXTRACT(\"__time\",'YEAR')  <= 1997 group by c_city, s_city, d_year order by d_year asc, lo_revenue desc

Query 3.3
select c_city, s_city, d_year, sum(lo_revenue) as lo_revenue from ssb_data  where (c_city='UNITED KI1' or c_city='UNITED KI5') and (s_city='UNITED KI1' or s_city='UNITED KI5') and FLOOR(\"__time\" to YEAR) >= TIME_PARSE('1992-01-01T00:00:00.000Z') and FLOOR(\"__time\" to YEAR) <= TIME_PARSE('1997-01-01T00:00:00.000Z') group by c_city, s_city, d_year order by d_year asc, lo_revenue desc

Query 3.4
select c_city, s_city, d_year, sum(lo_revenue) as lo_revenue from ssb_data where (c_city='UNITED KI1' or c_city='UNITED KI5') and (s_city='UNITED KI1' or s_city='UNITED KI5') and TIME_FLOOR(""__time"",'P1M') = TIME_PARSE('Dec1997','MMMyyyy') group by c_city, s_city, d_year order by d_year asc, lo_revenue desc

Query 4.1
select d_year, c_nation, sum(lo_revenue) - sum(lo_supplycost) as profit from ssb_data  where c_region = 'AMERICA' and s_region = 'AMERICA' and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2') group by d_year, c_nation order by d_year, c_nation

Query 4.2
select d_year, s_nation, p_category, sum(lo_revenue) - sum(lo_supplycost) as profit from ssb_data  where c_region = 'AMERICA' and s_region = 'AMERICA' and (FLOOR(\"__time\" to YEAR) = TIME_PARSE('1997-01-01T00:00:00.000Z') or FLOOR(\"__time\" to YEAR) = TIME_PARSE('1998-01-01T00:00:00.000Z')) and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2') group by d_year, s_nation, p_category order by d_year, s_nation, p_category

Query 4.3
select d_year, s_nation, p_category, sum(lo_revenue) - sum(lo_supplycost) as profit from ssb_data where c_region = 'AMERICA' and s_region = 'AMERICA' and (FLOOR(\"__time\" to YEAR) = TIME_PARSE('1997-01-01T00:00:00.000Z') or FLOOR(\"__time\" to YEAR) = TIME_PARSE('1998-01-01T00:00:00.000Z')) and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2') group by d_year, s_nation, p_category order by d_year, s_nation, p_category

Google BigQuery Optimized Queries

Query 1.1
select sum(lo_extendedprice*lo_discount) as revenue from `community-benchmark.SSBData.ssb_data_small_part` where (date(f0_) between ""1993-01-01"" and ""1993-12-31"") and lo_discount between 1 and 3 and lo_quantity < 25

Query 1.2
select sum(lo_extendedprice*lo_discount) as lo_revenue from `community-benchmark.SSBData.ssb_data_small_part` where (date(f0_) between ""1994-01-01"" and ""1994-01-31"") and lo_discount between 4 and 6 and lo_quantity between 26 and 35

Query 1.3
select sum(lo_extendedprice*lo_discount) as lo_revenue from `community-benchmark.SSBData.ssb_data_small_part` where d_weeknuminyear = 6 and DATE (f0_) BETWEEN ""1994-01-01"" and ""1994-12-31"" and lo_discount between 5 and 7 and lo_quantity between 26 and 35

Query 2.1
select sum(lo_revenue), d_year, p_brand1 from `community-benchmark.SSBData.ssb_data_small_part`  where p_category = 'MFGR#12' and s_region = 'AMERICA' group by d_year, p_brand1 order by d_year, p_brand1

Query 2.2
select sum(lo_revenue), d_year, p_brand1 from `community-benchmark.SSBData.ssb_data_small_part`  where p_brand1 between 'MFGR#2221' and 'MFGR#2228' and s_region = 'ASIA' group by d_year, p_brand1 order by d_year, p_brand1

Query 2.3
select sum(lo_revenue), d_year, p_brand1 from `community-benchmark.SSBData.ssb_data_small_part`  where p_brand1= 'MFGR#2239' and s_region = 'EUROPE' group by d_year, p_brand1 order by d_year, p_brand1

Query 3.1
select c_nation, s_nation, d_year, sum(lo_revenue) as lo_revenue from `community-benchmark.SSBData.ssb_data_small_part`where c_region = 'ASIA' and s_region = 'ASIA' and (DATE(f0_) BETWEEN ""1992-01-01"" AND ""1997-12-31"") group by c_nation, s_nation, d_year order by d_year asc, lo_revenue desc

Query 3.2
select c_city, s_city, d_year, sum(lo_revenue) as lo_revenue from `community-benchmark.SSBData.ssb_data_small_part` where c_nation = 'UNITED STATES' and s_nation = 'UNITED STATES' and (DATE(f0_) BETWEEN ""1992-01-01"" AND ""1997-12-31"") group by c_city, s_city, d_year order by d_year asc, lo_revenue desc

Query 3.3
select c_city, s_city, d_year, sum(lo_revenue) as lo_revenue from `community-benchmark.SSBData.ssb_data_small_part` where (c_city='UNITED KI1' or c_city='UNITED KI5') and (s_city='UNITED KI1' or s_city='UNITED KI5') and (DATE(f0_) BETWEEN ""1992-01-01"" AND ""1997-12-31"") group by c_city, s_city, d_year order by d_year asc, lo_revenue desc

Query 3.4
select c_city, s_city, d_year, sum(lo_revenue) as lo_revenue from `community-benchmark.SSBData.ssb_data_small_part` where (c_city='UNITED KI1' or c_city='UNITED KI5') and (s_city='UNITED KI1' or s_city='UNITED KI5') and (DATE(f0_) BETWEEN ""1997-12-01"" AND ""1997-12-31"") group by c_city, s_city, d_year order by d_year asc, lo_revenue desc

Query 4.1
select d_year, c_nation, sum(lo_revenue - lo_supplycost) as profit from `community-benchmark.SSBData.ssb_data_small_part` where c_region = 'AMERICA' and s_region = 'AMERICA' and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2') group by d_year, c_nation order by d_year, c_nation

Query 4.2
select d_year, s_nation, p_category, sum(lo_revenue - lo_supplycost) as profit from `community-benchmark.SSBData.ssb_data_small_part` where c_region = 'AMERICA' and s_region = 'AMERICA'
and (DATE(f0_) BETWEEN ""1997-01-01"" AND ""1998-12-31"") and (p_mfgr = 'MFGR#1' or p_mfgr = 'MFGR#2') group by d_year, s_nation, p_category order by d_year, s_nation, p_category

Query 4.3
select d_year, s_city, p_brand1, sum(lo_revenue - lo_supplycost) as profit from `community-benchmark.SSBData.ssb_data_small_part` where s_nation = 'UNITED STATES'  and (DATE(f0_) BETWEEN ""1997-01-01"" AND ""1998-12-31"") and p_category = 'MFGR#14' group by d_year, s_city, p_brand1 order by d_year, s_city, p_brand1
